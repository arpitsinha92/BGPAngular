{"version":3,"sources":["webpack:///./src/app/views/sessions/error/error.component.css","webpack:///./src/app/views/sessions/error/error.component.html","webpack:///./src/app/views/sessions/error/error.component.ts","webpack:///./src/app/views/sessions/forgot-password/forgot-password.component.css","webpack:///./src/app/views/sessions/forgot-password/forgot-password.component.html","webpack:///./src/app/views/sessions/forgot-password/forgot-password.component.ts","webpack:///./src/app/views/sessions/lockscreen/lockscreen.component.css","webpack:///./src/app/views/sessions/lockscreen/lockscreen.component.html","webpack:///./src/app/views/sessions/lockscreen/lockscreen.component.ts","webpack:///./src/app/views/sessions/not-found/not-found.component.css","webpack:///./src/app/views/sessions/not-found/not-found.component.html","webpack:///./src/app/views/sessions/not-found/not-found.component.ts","webpack:///./src/app/views/sessions/signin/signin.component.css","webpack:///./src/app/views/sessions/signin/signin.component.html","webpack:///./src/app/views/sessions/signin/signin.component.ts","webpack:///./src/app/views/sessions/signup/signup.component.css","webpack:///./src/app/views/sessions/signup/signup.component.html","webpack:///./src/app/views/sessions/signup/signup.component.ts"],"names":[],"mappings":"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","file":"default~views-home-home-module~views-sessions-sessions-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Nlc3Npb25zL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"page-wrap height-100 default-bg\\\">\\r\\n  <div class=\\\"app-error\\\">\\r\\n    <div class=\\\"fix\\\">\\r\\n      <mat-icon class=\\\"error-icon\\\" color=\\\"warn\\\">warning</mat-icon>\\r\\n      <div class=\\\"error-text\\\">\\r\\n        <h1 class=\\\"error-title\\\">500</h1>\\r\\n        <div class=\\\"error-subtitle\\\">Server Error!</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"error-actions\\\">\\r\\n      <button \\r\\n      mat-raised-button \\r\\n      color=\\\"primary\\\"\\r\\n      class=\\\"mb-1 mr-05\\\"\\r\\n      [routerLink]=\\\"['/dashboard']\\\">Back to Dashboard</button>\\r\\n      <button \\r\\n      mat-raised-button \\r\\n      color=\\\"warn\\\">Report this Problem</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Nlc3Npb25zL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\r\\n  <div class=\\\"session-form-hold\\\">\\r\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"text-center pb-1\\\">\\r\\n          <img src=\\\"assets/images/logo-full.png\\\" alt=\\\"\\\" class=\\\"mb-05\\\">\\r\\n          <p class=\\\"text-muted m-0\\\">New password will be sent to your email address</p>\\r\\n        </div>\\r\\n        <form #fpForm=\\\"ngForm\\\" (ngSubmit)=\\\"submitEmail()\\\">\\r\\n\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input\\r\\n                matInput\\r\\n                name=\\\"email\\\"\\r\\n                required\\r\\n                [(ngModel)]=\\\"userEmail\\\"\\r\\n                #email=\\\"ngModel\\\"\\r\\n                placeholder=\\\"Email\\\"\\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"email.errors && (email.dirty || email.touched) && (email.errors.required)\\\" \\r\\n              class=\\\"form-error-msg\\\"> Email is required </small>\\r\\n          </div>\\r\\n\\r\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" [disabled]=\\\"fpForm.invalid\\\">Submit</button>\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <a [routerLink]=\\\"'/sessions/signin'\\\" class=\\\"mat-primary text-center full-width\\\">Sign in</a>\\r\\n            <span fxFlex></span>\\r\\n            <a [routerLink]=\\\"'/sessions/signup'\\\" class=\\\"mat-primary text-center full-width\\\">Create a new account</a>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatProgressBar, MatButton } from '@angular/material';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  userEmail;\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  submitEmail() {\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Nlc3Npb25zL2xvY2tzY3JlZW4vbG9ja3NjcmVlbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\r\\n  <div class=\\\"session-form-hold session-lockscreen\\\">\\r\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <div fxFlex=\\\"column\\\" fxFlexWrap=\\\"wrap\\\">\\r\\n          <div fxFlexWrap=\\\"wrap\\\" class=\\\"lockscreen-user\\\">\\r\\n            <img class=\\\"lockscreen-face\\\" src=\\\"assets/images/face-3.jpg\\\" alt=\\\"\\\">\\r\\n            <h5 class=\\\"m-0 font-normal\\\">John Doe</h5>\\r\\n            <small class=\\\"text-muted\\\">Last seen 1 hour ago</small>\\r\\n          </div>\\r\\n          <form #lockscreenForm=\\\"ngForm\\\" (ngSubmit)=\\\"unlock()\\\">\\r\\n            <div class=\\\"\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input \\r\\n                  type=\\\"password\\\"\\r\\n                  name=\\\"password\\\"\\r\\n                  required\\r\\n                  matInput\\r\\n                  [(ngModel)]=\\\"lockscreenData.password\\\"\\r\\n                  #password=\\\"ngModel\\\"\\r\\n                  placeholder=\\\"Password\\\">\\r\\n              </mat-form-field>\\r\\n              <small \\r\\n                *ngIf=\\\"password.errors && (password.dirty || password.touched) && (password.errors.required)\\\" \\r\\n                class=\\\"form-error-msg\\\"> Password is required </small>\\r\\n            </div>\\r\\n            \\r\\n            <button mat-raised-button class=\\\"mat-primary full-width mb-05\\\" [disabled]=\\\"lockscreenForm.invalid\\\">Unlock</button>\\r\\n            <button mat-raised-button [routerLink]=\\\"'/sessions/signin'\\\" color=\\\"accent\\\" class=\\\"mat-primary full-width\\\">It's Not Me!</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatProgressBar, MatButton } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-lockscreen',\r\n  templateUrl: './lockscreen.component.html',\r\n  styleUrls: ['./lockscreen.component.css']\r\n})\r\nexport class LockscreenComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n\r\n  lockscreenData = {\r\n    password: ''\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  unlock() {\r\n    console.log(this.lockscreenData);\r\n\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Nlc3Npb25zL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page-wrap height-100 default-bg\\\">\\r\\n  <div class=\\\"app-error\\\">\\r\\n    <div class=\\\"fix\\\">\\r\\n      <mat-icon class=\\\"error-icon\\\" color=\\\"warn\\\">error</mat-icon>\\r\\n      <div class=\\\"error-text\\\">\\r\\n        <h1 class=\\\"error-title\\\">404</h1>\\r\\n        <div class=\\\"error-subtitle\\\">Page Not Found!</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"error-actions\\\">\\r\\n      <button \\r\\n      mat-raised-button \\r\\n      color=\\\"primary\\\"\\r\\n      class=\\\"mb-1 mr-05\\\"\\r\\n      [routerLink]=\\\"['/dashboard']\\\">Back to Dashboard</button>\\r\\n      \\r\\n      <button \\r\\n      mat-raised-button \\r\\n      color=\\\"warn\\\">Report this Problem</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Nlc3Npb25zL3NpZ25pbi9zaWduaW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\r\\n  <div class=\\\"session-form-hold\\\">\\r\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"text-center pb-1\\\">\\r\\n          <img src=\\\"assets/images/logo-full.png\\\" alt=\\\"\\\" class=\\\"mb-05\\\">\\r\\n          <p class=\\\"text-muted m-0\\\">Sign in to your account</p>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"signinForm\\\" (ngSubmit)=\\\"signin()\\\">\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input\\r\\n                matInput\\r\\n                name=\\\"username\\\"\\r\\n                [formControl]=\\\"signinForm.controls['username']\\\"\\r\\n                placeholder=\\\"Username\\\"\\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"signinForm.controls['username'].hasError('required') && signinForm.controls['username'].touched\\\" \\r\\n              class=\\\"form-error-msg\\\"> Username is required </small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n                type=\\\"password\\\"\\r\\n                name=\\\"password\\\"\\r\\n                matInput\\r\\n                [formControl]=\\\"signinForm.controls['password']\\\"\\r\\n                placeholder=\\\"Password\\\" \\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"signinForm.controls['password'].hasError('required') && signinForm.controls['password'].touched\\\" \\r\\n              class=\\\"form-error-msg\\\"> Password is required </small>\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-checkbox\\r\\n              name=\\\"rememberMe\\\"\\r\\n              [formControl]=\\\"signinForm.controls['rememberMe']\\\"\\r\\n              class=\\\"pb-1\\\">Remember this computer</mat-checkbox>\\r\\n          </div>\\r\\n          \\r\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" [disabled]=\\\"signinForm.invalid\\\">Sign in</button>\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <a [routerLink]=\\\"'/sessions/forgot-password'\\\" class=\\\"mat-primary text-center full-width\\\">Forgot password</a>\\r\\n            <span fxFlex></span>\\r\\n            <a [routerLink]=\\\"'/sessions/signup'\\\" class=\\\"mat-primary text-center full-width\\\">Create a new account</a>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatProgressBar, MatButton } from '@angular/material';\r\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n\r\n  signinForm: FormGroup;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.signinForm = new FormGroup({\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n      rememberMe: new FormControl(false)\r\n    })\r\n  }\r\n\r\n  signin() {\r\n    const signinData = this.signinForm.value\r\n    console.log(signinData);\r\n\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Nlc3Npb25zL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\r\\n  <div class=\\\"session-form-hold\\\">\\r\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"text-center pb-1\\\">\\r\\n          <img src=\\\"assets/images/logo-full.png\\\" alt=\\\"\\\" class=\\\"mb-05\\\">\\r\\n          <p class=\\\"text-muted m-0\\\">Sign up to use our service</p>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"signupForm\\\"  (ngSubmit)=\\\"signup()\\\">\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input\\r\\n                matInput\\r\\n                type=\\\"email\\\"\\r\\n                name=\\\"email\\\"\\r\\n                [formControl]=\\\"signupForm.controls['email']\\\"\\r\\n                placeholder=\\\"Your Email\\\"\\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"signupForm.controls['email'].hasError('required') && signupForm.controls['email'].touched\\\" \\r\\n              class=\\\"form-error-msg\\\"> Email is required </small>\\r\\n\\r\\n              <small \\r\\n                *ngIf=\\\"signupForm.controls['email'].hasError('email') && signupForm.controls['email'].touched\\\" \\r\\n                class=\\\"form-error-msg\\\"> Invaild email address </small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n                type=\\\"password\\\"\\r\\n                name=\\\"password\\\"\\r\\n                matInput\\r\\n                [formControl]=\\\"signupForm.controls['password']\\\"\\r\\n                placeholder=\\\"Password\\\" \\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"signupForm.controls['password'].hasError('required') && signupForm.controls['password'].touched\\\" \\r\\n              class=\\\"form-error-msg\\\"> Password is required </small>\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input\\r\\n                type=\\\"password\\\"\\r\\n                name=\\\"confirmPassword\\\"\\r\\n                matInput\\r\\n                [formControl]=\\\"signupForm.controls['confirmPassword']\\\"\\r\\n                placeholder=\\\"Confirm Password\\\"\\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small *ngIf=\\\"signupForm.controls['confirmPassword'].hasError('required') && signupForm.controls['confirmPassword'].touched\\\" class=\\\"form-error-msg\\\">Confirm password is required.</small>\\r\\n            <small *ngIf=\\\"signupForm.controls['confirmPassword'].hasError('equalTo')\\\" class=\\\"form-error-msg\\\">Passwords do not math.</small>\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-checkbox\\r\\n              name=\\\"agreed\\\"\\r\\n              [formControl]=\\\"signupForm.controls['agreed']\\\"\\r\\n              class=\\\"pb-1\\\">I have read and agree to the terms of service.</mat-checkbox>\\r\\n\\r\\n              <small \\r\\n                *ngIf=\\\"signupForm.controls['agreed'].hasError('agreed') && signupForm.controls['agreed'].touched\\\" \\r\\n                class=\\\"form-error-msg\\\"> You must agree to the terms and conditions </small>\\r\\n          </div>\\r\\n\\r\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" [disabled]=\\\"signupForm.invalid\\\">Sign up</button>\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <a [routerLink]=\\\"'/sessions/signin'\\\" class=\\\"mat-primary text-center full-width\\\">Sign in to existing account</a>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatProgressBar, MatButton } from '@angular/material';\r\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n\r\n  signupForm: FormGroup\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    const password = new FormControl('', Validators.required);\r\n    const confirmPassword = new FormControl('', CustomValidators.equalTo(password));\r\n\r\n    this.signupForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n      agreed: new FormControl('', (control: FormControl) => {\r\n        const agreed = control.value;\r\n        if(!agreed) {\r\n          return { agreed: true }\r\n        }\r\n        return null;\r\n      })\r\n    })\r\n  }\r\n\r\n  signup() {\r\n    const signupData = this.signupForm.value;\r\n    console.log(signupData);\r\n\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}