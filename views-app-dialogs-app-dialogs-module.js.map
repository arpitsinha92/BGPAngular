{"version":3,"sources":["webpack:///./src/app/views/app-dialogs/app-dialogs.module.ts","webpack:///./src/app/views/app-dialogs/app-dialogs.routing.ts","webpack:///./src/app/views/app-dialogs/confirm-dialog/confirm-dialog.component.css","webpack:///./src/app/views/app-dialogs/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/views/app-dialogs/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/views/app-dialogs/loader-dialog/loader-dialog.component.css","webpack:///./src/app/views/app-dialogs/loader-dialog/loader-dialog.component.html","webpack:///./src/app/views/app-dialogs/loader-dialog/loader-dialog.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACA;AACF;AAMjB;AAC8B;AAEyB;AACH;AAE1B;AAetD;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAb5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,gEAAc;gBACd,+DAAa;gBACb,iEAAe;gBACf,+DAAa;gBACb,kEAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,kEAAa,CAAC;aACrC;YACD,YAAY,EAAE,CAAC,+FAAsB,EAAE,4FAAqB,CAAC;SAC9D,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC5B7B;AAAA;AAAA;AAAA;AAAmF;AACH;AAEzE,IAAM,aAAa,GAAW;IACnC;QACE,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE,CAAC;gBACT,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,+FAAsB;gBACjC,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE;aAClD,EAAE;gBACD,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,4FAAqB;gBAChC,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE;aAChD,CAAC;KACH;CACF,CAAC;;;;;;;;;;;;AClBF,+DAA+D,2L;;;;;;;;;;;ACA/D,65BAA65B,gBAAgB,6C;;;;;;;;;;;;;;;;;;;;;;;;;ACA33B;AAC2C;AAO7F;IAIE,gCAAmB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAHpD,UAAK,GAAG,gBAAgB,CAAC;QACzB,SAAI,GAAG,sBAAsB,CAAC;IAE0B,CAAC;IAEzD,yCAAQ,GAAR;IACA,CAAC;IACD,2CAAU,GAAV;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC;aACjE,SAAS,CAAC,UAAC,MAAM;YAChB,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAbU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAKmC,kGAAiB;OAJzC,sBAAsB,CAclC;IAAD,6BAAC;CAAA;AAdkC;;;;;;;;;;;;ACRnC,+DAA+D,uL;;;;;;;;;;;ACA/D,+9B;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACwC;AAO1F;IAGE,+BAAoB,MAAwB;QAAxB,WAAM,GAAN,MAAM,CAAkB;QAF5C,gBAAW,GAAG,IAAI,CAAC;QACnB,UAAK,GAAG,aAAa,CAAC;IAC0B,CAAC;IAEjD,wCAAQ,GAAR;IACA,CAAC;IACD,0CAAU,GAAV;QAAA,iBAKC;QAJC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,UAAU,CAAC;YACT,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;IACtB,CAAC;IAZU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAI4B,+FAAgB;OAHjC,qBAAqB,CAajC;IAAD,4BAAC;CAAA;AAbiC","file":"views-app-dialogs-app-dialogs-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { \r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatListModule,\r\n  MatButtonModule\r\n } from '@angular/material';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\r\nimport { LoaderDialogComponent } from './loader-dialog/loader-dialog.component';\r\n\r\nimport { DialogsRoutes } from \"./app-dialogs.routing\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    SharedModule,\r\n    RouterModule.forChild(DialogsRoutes)\r\n  ],\r\n  declarations: [ConfirmDialogComponent, LoaderDialogComponent]\r\n})\r\nexport class AppDialogsModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\r\nimport { LoaderDialogComponent } from './loader-dialog/loader-dialog.component';\r\n\r\nexport const DialogsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [{\r\n      path: 'confirm',\r\n      component: ConfirmDialogComponent,\r\n      data: { title: 'Confirm', breadcrumb: 'CONFIRM' },\r\n    }, {\r\n      path: 'loader',\r\n      component: LoaderDialogComponent,\r\n      data: { title: 'Loader', breadcrumb: 'LOADER' },\r\n    }]\r\n  }\r\n];","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FwcC1kaWFsb2dzL2NvbmZpcm0tZGlhbG9nL2NvbmZpcm0tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\r\\n  <mat-card-title class=\\\"\\\">\\r\\n    <div class=\\\"card-title-text\\\">\\r\\n      <span>Confirm Dialog</span>\\r\\n    </div>\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"pb-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input\\r\\n            matInput\\r\\n            name=\\\"title\\\"\\r\\n            placeholder=\\\"Title\\\"\\r\\n            [(ngModel)]=\\\"title\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"pb-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input\\r\\n            matInput\\r\\n            name=\\\"text\\\"\\r\\n            placeholder=\\\"Text\\\"\\r\\n            [(ngModel)]=\\\"text\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\" class=\\\"mb-1\\\">Open dialog</button>\\r\\n    <p>You selected: {{selectedOption}}</p>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppConfirmService } from '../../../shared/services/app-confirm/app-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  title = 'Confirm dialog';\r\n  text = 'Just click a button!';\r\n  selectedOption;\r\n  constructor(public confirmService: AppConfirmService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  openDialog() {\r\n    this.confirmService.confirm({title: this.title, message: this.text})\r\n      .subscribe((result) => {\r\n        this.selectedOption = result;\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FwcC1kaWFsb2dzL2xvYWRlci1kaWFsb2cvbG9hZGVyLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\r\\n  <mat-card-title class=\\\"\\\">\\r\\n    <div class=\\\"card-title-text\\\">\\r\\n      <span>Loader Dialog</span>\\r\\n    </div>\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"pb-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input\\r\\n            matInput\\r\\n            name=\\\"title\\\"\\r\\n            placeholder=\\\"Loader text\\\"\\r\\n            [(ngModel)]=\\\"title\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"pb-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input\\r\\n            matInput\\r\\n            name=\\\"time\\\"\\r\\n            type=\\\"number\\\"\\r\\n            placeholder=\\\"Loading time (ms)\\\"\\r\\n            [(ngModel)]=\\\"loadingTime\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openLoader()\\\" class=\\\"\\\">Show loader</button>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppLoaderService } from '../../../shared/services/app-loader/app-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-loader-dialog',\r\n  templateUrl: './loader-dialog.component.html',\r\n  styleUrls: ['./loader-dialog.component.css']\r\n})\r\nexport class LoaderDialogComponent implements OnInit {\r\n  loadingTime = 3000;\r\n  title = 'Please wait';\r\n  constructor(private loader: AppLoaderService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  openLoader() {\r\n    this.loader.open(this.title);\r\n    setTimeout(() => {\r\n      this.loader.close();\r\n    }, this.loadingTime)\r\n  }\r\n}\r\n"],"sourceRoot":""}