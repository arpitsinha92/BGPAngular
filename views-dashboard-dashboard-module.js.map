{"version":3,"sources":["webpack:///./src/app/views/dashboard/dashboard.component.html","webpack:///./src/app/views/dashboard/dashboard.component.ts","webpack:///./src/app/views/dashboard/dashboard.module.ts","webpack:///./src/app/views/dashboard/dashboard.routing.ts"],"names":[],"mappings":"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","file":"views-dashboard-dashboard-module.js","sourcesContent":["module.exports = \"<hr>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n<button mat-raised-button color=\\\"primary\\\" class=\\\"float-right\\\" *ngIf=\\\"showbutton\\\" (click)=\\\"showProductFrom()\\\">Add Product</button>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"ProductDescription\\\">\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"float-left\\\"  (click)=\\\"backtoProductmainScreen()\\\">Back</button>\\r\\n  <br/>\\r\\n  <br/>\\r\\n  <div class=\\\"form-row mb-2\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n            <label><strong>Product Name</strong></label><br/>\\r\\n           {{descriptionProductName}}\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col\\\">\\r\\n      <label><strong>Category Name</strong></label><br/>\\r\\n     {{descriptionCategoryName}}\\r\\n</div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-row mb-2\\\">\\r\\n\\r\\n    <div class=\\\"col\\\">\\r\\n      <label><strong>Product Hindi Name</strong></label><br/>\\r\\n     {{descriptionProductHindiName}}\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col\\\">\\r\\n<label><strong>Image</strong></label><br/>\\r\\n{{descriptionImage}}\\r\\n</div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <br/>\\r\\n  <br/>\\r\\n  <br/>\\r\\n  <mat-card class=\\\"p-0\\\"  [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n    <mat-card-content class=\\\"p-0\\\">\\r\\n      <ngx-datatable\\r\\n            class=\\\"material ml-0 mr-0\\\"\\r\\n            [rows]=\\\"ProductDescriptionList\\\" \\r\\n            [columnMode]=\\\"'flex'\\\"\\r\\n            [headerHeight]=\\\"50\\\"\\r\\n            [footerHeight]=\\\"50\\\"\\r\\n            [limit]=\\\"10\\\"\\r\\n            [rowHeight]=\\\"'auto'\\\">\\r\\n            <ngx-datatable-column name=\\\"Quantity\\\" [flexGrow]=\\\"1\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n               {{row?.quantity}} \\r\\n              </ng-template>\\r\\n            </ngx-datatable-column> \\r\\n  \\r\\n            <ngx-datatable-column name=\\\"Unit\\\" [flexGrow]=\\\"1\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n               {{row?.unit}} \\r\\n              </ng-template>\\r\\n            </ngx-datatable-column> \\r\\n  \\r\\n            <ngx-datatable-column name=\\\"Price\\\" [flexGrow]=\\\"1\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n               {{row?.price}} \\r\\n              </ng-template>\\r\\n            </ngx-datatable-column> \\r\\n             \\r\\n          \\r\\n          </ngx-datatable>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"ProductForm\\\">\\r\\n<div class=\\\"form-row mb-4\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n          <label><strong>Product Name</strong></label><br/>\\r\\n          <input type=\\\"text\\\" name=\\\"Productname\\\" [(ngModel)]=\\\"Productname\\\" placeholder=\\\"Product Name\\\">\\r\\n  </div>\\r\\n\\r\\n  \\r\\n  <div class=\\\"col\\\">\\r\\n          <label><strong>Category Name</strong></label><br/>\\r\\n          \\r\\n          <select [(ngModel)]=\\\"Category\\\" style=\\\"width: 35%;\\\" placeholder=\\\"Category Name\\\">\\r\\n              <!-- <option value=\\\"0\\\">--Select Category--</option> -->\\r\\n              <option *ngFor=\\\"let s of summaries\\\"  value={{s._id}} >\\r\\n                  {{s.name}}\\r\\n              </option>\\r\\n          </select>\\r\\n\\r\\n\\r\\n          <!-- <input type=\\\"text\\\" name=\\\"Category\\\" [(ngModel)]=\\\"Category\\\" placeholder=\\\"Category\\\"> -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-row mb-4\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n          <label><strong>Hindi Product Name</strong></label><br/>\\r\\n          <input type=\\\"text\\\" name=\\\"HindiProductname\\\" [(ngModel)]=\\\"HindiProductname\\\" placeholder=\\\"Hindi Product Name\\\">\\r\\n  </div>\\r\\n \\r\\n  <div class=\\\"col\\\">\\r\\n          <label><strong>Image</strong></label><br/>\\r\\n          <input type='file' [(ngModel)]='image' (change)=\\\"onfileSelector($event)\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-md-2\\\" [formGroup]=\\\"addForm\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"label-control\\\">Add quantity</label>\\r\\n      <br>\\r\\n      <label class=\\\"switch\\\">\\r\\n  <input type=\\\"checkbox\\\" class=\\\"form-control\\\" formControlName=\\\"items\\\">\\r\\n  <span class=\\\"slider round\\\">\\r\\n    <span class=\\\"on\\\">\\r\\n      {{addForm.value.items_value}}\\r\\n    </span> \\r\\n    <span class=\\\"off\\\">\\r\\n      {{addForm.value.items_value}}\\r\\n    </span>\\r\\n  </span>\\r\\n  </label>\\r\\n      \\r\\n      <table>\\r\\n          <thead>\\r\\n              <button (click)=\\\"onAddRow()\\\" *ngIf=\\\"addForm.get('rows')\\\">Add Qty</button>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n              <tr *ngFor=\\\"let row of addForm.get('rows')?.controls;let index = index;\\\">\\r\\n        <td>\\r\\n          Quantity : <input [formControl]=\\\"row.get('quantity')\\\">\\r\\n        </td>\\r\\n        <td>\\r\\n          Unit : <input [formControl]=\\\"row.get('unit')\\\">\\r\\n        </td>\\r\\n        <td>\\r\\n          Price : <input [formControl]=\\\"row.get('price')\\\">\\r\\n        </td>\\r\\n        <td>\\r\\n          <button (click)=\\\"onRemoveRow(index)\\\">Remove</button>\\r\\n        </td>\\r\\n              </tr>\\r\\n          </tbody>\\r\\n      </table>\\r\\n<br/>\\r\\n      <button mat-raised-button  (click)=\\\"saveProduct()\\\" color=\\\"primary\\\">{{BtnName}}</button>\\r\\n      &nbsp;<button mat-raised-button  (click)=\\\"clearFields()\\\" color=\\\"warn\\\">Clear</button>\\r\\n     \\r\\n\\r\\n      <!-- <pre>{{rows.value | json}}</pre> -->\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<br/>\\r\\n<br/>\\r\\n<br/>\\r\\n<mat-card class=\\\"p-0\\\"  *ngIf=\\\"showbutton\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n    <ngx-datatable\\r\\n          class=\\\"material ml-0 mr-0\\\"\\r\\n          [rows]=\\\"ProductList\\\" \\r\\n          [columnMode]=\\\"'flex'\\\"\\r\\n          [headerHeight]=\\\"50\\\"\\r\\n          [footerHeight]=\\\"50\\\"\\r\\n          [limit]=\\\"10\\\"\\r\\n          [rowHeight]=\\\"'auto'\\\">\\r\\n          <ngx-datatable-column name=\\\"Product Name\\\" [flexGrow]=\\\"1\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n             {{row?.name}} \\r\\n            </ng-template>\\r\\n          </ngx-datatable-column> \\r\\n\\r\\n          <ngx-datatable-column name=\\\"Hindi Product Name\\\" [flexGrow]=\\\"1\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n             {{row?.hindi_name}} \\r\\n            </ng-template>\\r\\n          </ngx-datatable-column> \\r\\n\\r\\n          <ngx-datatable-column name=\\\"Category Name\\\" [flexGrow]=\\\"1\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n             {{row?.category_id.name}} \\r\\n            </ng-template>\\r\\n          </ngx-datatable-column> \\r\\n           \\r\\n          <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n              <button mat-icon-button mat-sm-button color=\\\"primary\\\" title=\\\"Edit\\\" class=\\\"mr-1\\\" (click)=\\\"editProduct(row)\\\"><mat-icon>edit</mat-icon></button>\\r\\n              \\r\\n              <button mat-icon-button mat-sm-button color=\\\"accent\\\" title=\\\"Description\\\" (click)=\\\"productDetails(row)\\\"><mat-icon>description</mat-icon></button>\\r\\n              \\r\\n              <button mat-icon-button mat-sm-button color=\\\"warn\\\" title=\\\"Delete\\\" (click)=\\\"deleteProduct(row)\\\"><mat-icon>delete</mat-icon></button>\\r\\n         \\r\\n\\r\\n             \\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n        </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<style>\\r\\n  body {\\r\\n\\r\\ncolor: green\\r\\n}\\r\\n.switch {\\r\\nposition: relative;\\r\\ndisplay: inline-block;\\r\\nwidth: 90px;\\r\\nheight: 34px;\\r\\n}\\r\\n\\r\\n.switch input {display:none;}\\r\\n\\r\\n.slider {\\r\\nposition: absolute;\\r\\ncursor: pointer;\\r\\ntop: 0;\\r\\nleft: 0;\\r\\nright: 0;\\r\\nbottom: 0;\\r\\nbackground-color: #FF586B;\\r\\n-webkit-transition: .4s;\\r\\ntransition: .4s;\\r\\n}\\r\\n\\r\\n.slider:before {\\r\\nposition: absolute;\\r\\ncontent: \\\"\\\";\\r\\nheight: 26px;\\r\\nwidth: 26px;\\r\\nleft: 4px;\\r\\nbottom: 4px;\\r\\nbackground-color: white;\\r\\n-webkit-transition: .4s;\\r\\ntransition: .4s;\\r\\n}\\r\\n\\r\\ninput:checked + .slider {\\r\\nbackground-color: #0CC27E;\\r\\n}\\r\\n\\r\\ninput:focus + .slider {\\r\\nbox-shadow: 0 0 1px #2196F3;\\r\\n}\\r\\n\\r\\ninput:checked + .slider:before {\\r\\n-webkit-transform: translateX(55px);\\r\\n-ms-transform: translateX(55px);\\r\\ntransform: translateX(55px);\\r\\n}\\r\\n\\r\\n/*------ ADDED CSS ---------*/\\r\\n.on\\r\\n{\\r\\ndisplay: none;\\r\\n}\\r\\n\\r\\n.on, .off\\r\\n{\\r\\ncolor: white;\\r\\nposition: absolute;\\r\\ntransform: translate(-50%,-50%);\\r\\ntop: 50%;\\r\\n}\\r\\n\\r\\n.on \\r\\n{\\r\\nleft: 45%;\\r\\n}\\r\\n\\r\\n.off \\r\\n{\\r\\nleft: 55%;\\r\\n}\\r\\n\\r\\ninput:checked+ .slider .on\\r\\n{display: block;}\\r\\n\\r\\ninput:checked + .slider .off\\r\\n{display: none;}\\r\\n\\r\\n/*--------- END --------*/\\r\\n\\r\\n/* Rounded sliders */\\r\\n.slider.round {\\r\\nborder-radius: 34px;\\r\\n}\\r\\n\\r\\n.slider.round:before {\\r\\nborder-radius: 50%;}\\r\\n  </style>\"","import { Component, OnInit } from '@angular/core';\r\nimport { egretAnimations } from \"../../shared/animations/egret-animations\";\r\nimport {NgForm} from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {HttpParams} from \"@angular/common/http\";\r\n// import * as jsPDF from 'jspdf';\r\n\r\nimport { Router } from '@angular/router'\r\nimport { AppLoaderService } from '../../shared/services/app-loader/app-loader.service';\r\n\r\nimport { MatSnackBar, getMatFormFieldMissingControlError } from '@angular/material';\r\n\r\nimport * as hopscotch from 'hopscotch';\r\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport {VERSION} from '@angular/material';\r\n\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\n// import {DateFormatter} from 'angular2/src/facade/intl';\r\n///import { TablesService } from '../tables.service';\r\n\r\nimport { AppConfirmService } from '../../shared/services/app-confirm/app-confirm.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { empty } from 'rxjs';\r\n\r\n\r\nexport interface Requirement {\r\n  Reqvalue: any;\r\n  ReqviewValue: string;\r\n}\r\nexport interface assign {\r\n  assignvalue: any;\r\n  assignviewValue: string;\r\n}\r\n\r\n\r\nexport interface source {\r\n  Sourcevalue: any;\r\n  SourceviewValue: string;\r\n}\r\n\r\nexport interface status {\r\n  statusvalue: any;\r\n  StatusviewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  animations: egretAnimations\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  ApiUrl: any='http://ec2-13-232-104-8.ap-south-1.compute.amazonaws.com:8090/';\r\n  url : any = this.ApiUrl+ 'product';\r\n  urlCat : any = this.ApiUrl+ 'category';\r\n  selectedFile: File = null;\r\n  onfileSelector(event)\r\n  {\r\n    this.selectedFile = <File>event.target.files[0];\r\n  }\r\n  ProductForm : any;\r\n  Productname: any;\r\n  Category: any;\r\n  HindiProductname: any;\r\n  data : any;\r\n  addForm: FormGroup;\r\n  ProductList : any;\r\n  rows: FormArray;\r\n  itemForm: FormGroup;\r\n  showbutton: any;\r\n  BtnName: any;\r\n  summaries : any;\r\n  constructor(private fb: FormBuilder, public httpClient: HttpClient, public confirmService: AppConfirmService) {\r\n\r\n    this.addForm = this.fb.group({\r\n      items: [null, Validators.required],\r\n      items_value: ['no', Validators.required]\r\n    });\r\n\r\n    this.rows = this.fb.array([]);\r\n\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\nthis.BtnName = \"Save\";\r\n    this.addForm.get(\"items\").valueChanges.subscribe(val => {\r\n      if (val === true) {\r\n        this.addForm.get(\"items_value\").setValue(\"yes\");\r\n\r\n        this.addForm.addControl('rows', this.rows);\r\n      }\r\n      if (val === false) {\r\n        this.addForm.get(\"items_value\").setValue(\"no\");\r\n        this.addForm.removeControl('rows');\r\n      }\r\n    });\r\n    this.ProductForm = false;\r\n    this.showbutton = true;\r\n\r\nthis.getAllProduct();\r\n    this.getAllCategory();\r\n    \r\n  }\r\n\r\n  showProductFrom()\r\n  {\r\n    this.ProductForm = true;\r\n    this.clearProductFields();\r\n    this.showbutton = false;\r\n  }\r\n\r\n  clearProductFields()\r\n  {\r\n    this.Productname = \"\";\r\n    this.Category = \"\";\r\n    this.HindiProductname = \"\";\r\n  }\r\n\r\n  onAddRow() {\r\n    this.rows.push(this.createItemFormGroup());\r\n  }\r\n\r\n  onRemoveRow(rowIndex:number){\r\n    this.rows.removeAt(rowIndex);\r\n  }\r\n\r\n  createItemFormGroup(): FormGroup {\r\n    \r\n    return this.fb.group({\r\n      quantity: null,\r\n      unit: null,\r\n      price: null\r\n    });\r\n\r\n   \r\n  }\r\n\r\n  hideProductForm()\r\n  {\r\n    this.ProductForm = false;\r\n    this.clearProductFields();\r\n    this.showbutton = true;\r\n  }\r\n\r\n  clearFields()\r\n  {\r\n\r\n    this.Productname = \"\";\r\n    this.Category = \"\";\r\n    this.HindiProductname = \"\";\r\n    this.ProductForm = false;\r\n    this.showbutton = true;\r\n    this.getAllProduct();\r\n  }\r\n\r\n  getAllProduct()\r\n  {\r\n    this.data = this.httpClient.get(this.url);\r\n    this.data.subscribe(data =>{\r\n      this.ProductList = data.products;\r\n    ;\r\n    })\r\n  }\r\n\r\n\r\n  getAllCategory() {\r\n\r\n    this.data = this.httpClient.get(this.urlCat);\r\n   this.data.subscribe(data =>{\r\n     this.summaries = data.category;\r\n   ;\r\n   })\r\n     }\r\n\r\n\r\n\r\n  msg : any;\r\n  prodID: any;\r\n  saveProduct()\r\n  {\r\n    \r\n\r\n    if(this.BtnName == 'Update')\r\n    {\r\n      \r\n      const fd  = new FormData();\r\n      fd.append('image', this.selectedFile);\r\n      var dataJson = {\r\n      \r\n        name : this.Productname,\r\n        category_id : this.Category,\r\n        hindi_name : this.HindiProductname,\r\n        quantity : this.rows.value\r\n      }\r\n      \r\n   this.data = this.httpClient.put(this.url+\"/\"+this.ProductId, dataJson);\r\n  \r\n   this.data.subscribe(data =>{\r\n    this.msg = data.message;\r\n    \r\n    if(this.msg == 'Product created')\r\n    {\r\n      this.prodID = data.product_id;\r\n      this.data = this.httpClient.post(this.url + '/imageUpload/'+ this.prodID, fd);\r\n  \r\n      this.data.subscribe(data =>{\r\n        this.msg = data.message;\r\n        if(this.msg == \"Image Uploaded Successfully\")\r\n        {\r\n          alert(\"Product Created Successfully\");\r\n          this.clearFields();\r\n          this.getAllProduct();\r\n  \r\n        }\r\n      });\r\n      \r\n    }\r\n    else\r\n    {\r\n      alert('Something went wrong!')\r\n    }\r\n   });\r\n    }\r\n    else\r\n    {\r\n    const fd  = new FormData();\r\n    fd.append('image', this.selectedFile);\r\n    var dataJson = {\r\n      name : this.Productname,\r\n      category_id : this.Category,\r\n      hindi_name : this.HindiProductname,\r\n      quantity : this.rows.value\r\n    }\r\n    \r\n this.data = this.httpClient.post(this.url,dataJson);\r\n\r\n this.data.subscribe(data =>{\r\n  this.msg = data.message;\r\n  \r\n  if(this.msg == 'Product created')\r\n  {\r\n    this.prodID = data.product_id;\r\n    this.data = this.httpClient.post(this.url + '/imageUpload/'+ this.prodID, fd);\r\n\r\n    this.data.subscribe(data =>{\r\n      this.msg = data.message;\r\n      if(this.msg == \"Image Uploaded Successfully\")\r\n      {\r\n        alert(\"Product Created Successfully\");\r\n        this.clearFields();\r\n        this.getAllProduct();\r\n\r\n      }\r\n    });\r\n    \r\n  }\r\n  else\r\n  {\r\n    alert('Something went wrong!')\r\n  }\r\n });\r\n}\r\n  }\r\n\r\n  ProductId : any;\r\n  \r\n  editProduct(row)\r\n  {\r\n    console.log(row);\r\n    this.ProductForm = true;\r\n    this.clearProductFields();\r\n    this.showbutton = false;\r\n    this.ProductId= row._id;\r\n    this.BtnName = 'Update';\r\n     this.Productname = row.name;\r\n    this.Category = row.category_id;\r\n    this.HindiProductname = row.hindi_name;\r\n\r\n  }\r\n\r\n  deletetitle : any = 'Delete Product';\r\n  deletetext : any = 'Are you sure do you realy want to delete this Product?';\r\n  selectedOption : any;\r\n  deleteProduct(row)\r\n  {\r\n    this.confirmService.confirm({title: this.deletetitle, message: this.deletetext})\r\n    .subscribe((result) => {\r\n      this.selectedOption = result;\r\n     // alert( this.selectedOption); row.LeadID\r\n\r\n     if(this.selectedOption)\r\n     {\r\n      let ldID : any =row._id;\r\n     \r\n\r\n      this.data = this.httpClient.delete(this.url+\"/\"+ldID);\r\n      this.data.subscribe(data =>{\r\n        this.msg = data.message;\r\n        if(this.msg == 'Deleted')\r\n        {\r\n          alert(\"Deleted Successfully\");\r\n          this.getAllProduct();\r\n        }\r\n        else\r\n        {\r\n          alert('Something went wrong!')\r\n        }\r\n        });\r\n      }\r\n      else\r\n      {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  descriptionProductName : any;\r\n  descriptionCategoryName : any;\r\n  ProductDescription : any;\r\n  descriptionProductHindiName : any;\r\n  ProductDescriptionList: any;\r\n  productDetails(row)\r\n  {\r\n    this.ProductDescription = true;\r\n    this.showbutton = false;\r\n\r\n    this.descriptionProductName = row.name;\r\n    this.descriptionCategoryName = row.category_id.name;\r\n    this.descriptionProductHindiName = row.hindi_name;\r\n    this.ProductDescriptionList = row.quantity;\r\n    console.log(this.ProductDescriptionList);\r\n  }\r\n\r\n  backtoProductmainScreen ()\r\n  {\r\n    this.ProductDescription = false;\r\n    this.showbutton = true;\r\n  }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { \r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatMenuModule,\r\n  MatProgressBarModule,\r\n  MatButtonModule,\r\n  MatChipsModule,\r\n  MatListModule,\r\n  MatGridListModule,\r\n  MatInputModule,\r\n  MatDatepickerModule, \r\n  MatNativeDateModule,\r\n  MatRadioModule,\r\n  MatCheckboxModule,\r\n  MatStepperModule\r\n } from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardRoutes } from \"./dashboard.routing\";\r\n\r\nimport { \r\n  MatAutocompleteModule,\r\n  MatButtonToggleModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatPaginatorModule,\r\n  MatProgressSpinnerModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n  \r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatButtonModule,\r\n    MatChipsModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    FlexLayoutModule,\r\n    ChartsModule,\r\n    NgxDatatableModule,\r\n    SharedModule,\r\n   \r\n\r\n\r\n\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n\r\n\r\n\r\n    MatInputModule,\r\n    MatListModule,\r\n   \r\n    MatDatepickerModule, \r\n    MatNativeDateModule,\r\n    MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n\r\n    MatIconModule,\r\n    MatStepperModule,\r\n    MatAutocompleteModule,\r\n  \r\n    MatButtonToggleModule,\r\n\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    FlexLayoutModule,\r\n    MatInputModule,\r\n    NgxDatatableModule,\r\n\r\n\r\n    RouterModule.forChild(DashboardRoutes)\r\n  ],\r\n  declarations: [DashboardComponent],\r\n  exports: []\r\n})\r\nexport class DashboardModule {\r\n\r\n}","import { Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\n\r\nexport const DashboardRoutes: Routes = [\r\n  { path: '', component: DashboardComponent, data: { title: 'Dashboard' } }\r\n];"],"sourceRoot":""}