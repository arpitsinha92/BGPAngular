{"version":3,"sources":["webpack:///./src/app/views/forms/basic-form/basic-form.component.css","webpack:///./src/app/views/forms/basic-form/basic-form.component.html","webpack:///./src/app/views/forms/basic-form/basic-form.component.ts","webpack:///./src/app/views/forms/file-upload/file-upload.component.css","webpack:///./src/app/views/forms/file-upload/file-upload.component.html","webpack:///./src/app/views/forms/file-upload/file-upload.component.ts","webpack:///./src/app/views/forms/forms.module.ts","webpack:///./src/app/views/forms/forms.routing.ts","webpack:///./src/app/views/forms/rich-text-editor/rich-text-editor.component.css","webpack:///./src/app/views/forms/rich-text-editor/rich-text-editor.component.html","webpack:///./src/app/views/forms/rich-text-editor/rich-text-editor.component.ts","webpack:///./src/app/views/forms/wizard/wizard.component.css","webpack:///./src/app/views/forms/wizard/wizard.component.html","webpack:///./src/app/views/forms/wizard/wizard.component.ts"],"names":[],"mappings":"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","file":"views-forms-forms-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Zvcm1zL2Jhc2ljLWZvcm0vYmFzaWMtZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\r\\n    <mat-card-title class=\\\"\\\">\\r\\n        <div class=\\\"card-title-text\\\">Form validation</div>\\r\\n        <mat-divider></mat-divider>\\r\\n    </mat-card-title>\\r\\n    <mat-card-content>\\r\\n        <form [formGroup]=\\\"basicForm\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\">\\r\\n                            <input\\r\\n                            matInput\\r\\n                            name=\\\"username\\\"\\r\\n                            formControlName=\\\"username\\\"\\r\\n                            placeholder=\\\"Username (Min Length: 4, Max Length: 9)\\\"\\r\\n                            value=\\\"\\\">\\r\\n                        </mat-form-field>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['username'].hasError('minlength') && basicForm.controls['username'].touched\\\" \\r\\n                        class=\\\"form-error-msg\\\"> Username require at least {{basicForm.controls['username'].errors.minlength.requiredLength}} characters </small>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['username'].hasError('maxlength') && basicForm.controls['username'].touched\\\" \\r\\n                        class=\\\"form-error-msg\\\"> Username can not contain more than {{basicForm.controls['username'].errors.maxlength.requiredLength}} characters </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\">\\r\\n                            <input\\r\\n                            matInput\\r\\n                            name=\\\"firstname\\\"\\r\\n                            formControlName=\\\"firstname\\\"\\r\\n                            placeholder=\\\"First name\\\"\\r\\n                            value=\\\"\\\">\\r\\n                        </mat-form-field>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['firstname'].hasError('required') && basicForm.controls['firstname'].touched\\\" \\r\\n                        class=\\\"form-error-msg\\\"> First name is required </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input\\r\\n                            matInput\\r\\n                            type=\\\"email\\\"\\r\\n                            name=\\\"email\\\"\\r\\n                            formControlName=\\\"email\\\"\\r\\n                            placeholder=\\\"Your Email\\\"\\r\\n                            value=\\\"\\\">\\r\\n                        </mat-form-field>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['email'].hasError('required') && basicForm.controls['email'].touched\\\" \\r\\n                        class=\\\"form-error-msg\\\"> Email is required </small>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['email'].hasError('email') && basicForm.controls['email'].touched\\\" \\r\\n                        class=\\\"form-error-msg\\\"> Invaild email address </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input\\r\\n                            matInput\\r\\n                            name=\\\"website\\\"\\r\\n                            formControlName=\\\"website\\\"\\r\\n                            placeholder=\\\"Your Website (http://mhrafi.com)\\\"\\r\\n                            value=\\\"\\\">\\r\\n                        </mat-form-field>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['website'].hasError('url') && basicForm.controls['website'].touched\\\" \\r\\n                        class=\\\"form-error-msg\\\"> Invaild web address </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\">\\r\\n                            <input \\r\\n                            matInput\\r\\n                            name=\\\"date\\\"\\r\\n                            formControlName=\\\"date\\\"\\r\\n                            placeholder=\\\"Date\\\" \\r\\n                            [(ngModel)] =\\\"Date\\\"\\r\\n                            [matDatepicker]=\\\"appDatepicker\\\">\\r\\n                            \\r\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"appDatepicker\\\"></mat-datepicker-toggle>\\r\\n                        </mat-form-field>\\r\\n                        <mat-datepicker #appDatepicker></mat-datepicker>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\">\\r\\n                            <input \\r\\n                            matInput\\r\\n                            name=\\\"cardno\\\"\\r\\n                            formControlName=\\\"cardno\\\"\\r\\n                            placeholder=\\\"Credit card number\\\">\\r\\n                        </mat-form-field>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['cardno'].hasError('creditCard') && basicForm.controls['cardno'].touched\\\" \\r\\n                        class=\\\"form-error-msg\\\"> Invaild card number </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\">\\r\\n                            <input \\r\\n                            matInput\\r\\n                            name=\\\"phone\\\"\\r\\n                            formControlName=\\\"phone\\\"\\r\\n                            placeholder=\\\"Phone number\\\">\\r\\n                        </mat-form-field>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['phone'].hasError('phone') && basicForm.controls['phone'].touched\\\" \\r\\n                        class=\\\"form-error-msg\\\"> Invaild phone number </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input \\r\\n                            type=\\\"password\\\"\\r\\n                            name=\\\"password\\\"\\r\\n                            matInput\\r\\n                            formControlName=\\\"password\\\"\\r\\n                            placeholder=\\\"Password\\\" \\r\\n                            value=\\\"\\\">\\r\\n                        </mat-form-field>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['password'].hasError('required') && basicForm.controls['password'].touched\\\" \\r\\n                        class=\\\"form-error-msg\\\"> Password is required </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input\\r\\n                            type=\\\"password\\\"\\r\\n                            name=\\\"confirmPassword\\\"\\r\\n                            matInput\\r\\n                            appEqualValidator=\\\"password\\\"\\r\\n                            formControlName=\\\"confirmPassword\\\"\\r\\n                            placeholder=\\\"Confirm Password\\\"\\r\\n                            value=\\\"\\\">\\r\\n                        </mat-form-field>\\r\\n                        <small \\r\\n                        *ngIf=\\\"basicForm.controls['confirmPassword'].hasError('equalTo')\\\" \\r\\n                        class=\\\"form-error-msg\\\"> Password mismatch </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <Label>Gender*</Label>\\r\\n                        <mat-radio-group \\r\\n                        name=\\\"gender\\\" \\r\\n                        formControlName=\\\"gender\\\">\\r\\n                            <mat-radio-button value=\\\"male\\\">Male</mat-radio-button>\\r\\n                            <mat-radio-button value=\\\"female\\\">Female</mat-radio-button>\\r\\n                        </mat-radio-group>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"pb-1 pt-05\\\">\\r\\n                        <mat-checkbox\\r\\n                        name=\\\"agreed\\\"\\r\\n                        formControlName=\\\"agreed\\\" \\r\\n                        class=\\\"pb-1\\\">I have read and agree to the terms of service.</mat-checkbox>\\r\\n\\r\\n                        <small \\r\\n                            *ngIf=\\\"basicForm.controls['agreed'].hasError('agreed') && basicForm.controls['agreed'].touched\\\" \\r\\n                            class=\\\"form-error-msg\\\"> You must agree to the terms and conditions </small>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button \\r\\n            mat-raised-button \\r\\n            color=\\\"primary\\\" \\r\\n            [disabled]=\\\"basicForm.invalid\\\" (click)=\\\"check()\\\">Submit</button>\\r\\n        </form>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\n\r\n@Component({\r\n  selector: 'app-basic-form',\r\n  templateUrl: './basic-form.component.html',\r\n  styleUrls: ['./basic-form.component.css']\r\n})\r\nexport class BasicFormComponent implements OnInit {\r\n  formData = {}\r\n  console = console;\r\n  basicForm: FormGroup;\r\n  date : any;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    let password = new FormControl('', Validators.required);\r\n    let confirmPassword = new FormControl('', CustomValidators.equalTo(password));\r\n\r\n    this.basicForm = new FormGroup({\r\n      username: new FormControl('', [\r\n        Validators.minLength(4),\r\n        Validators.maxLength(9)\r\n      ]),\r\n      firstname: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      website: new FormControl('', CustomValidators.url),\r\n      date: new FormControl(),\r\n      cardno: new FormControl('', [\r\n        CustomValidators.creditCard\r\n      ]),\r\n      phone: new FormControl('', CustomValidators.phone('BD')),\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n      gender: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      agreed: new FormControl('', (control: FormControl) => {\r\n        const agreed = control.value;\r\n        if(!agreed) {\r\n          return { agreed: true }\r\n        }\r\n        return null;\r\n      })\r\n    })\r\n  }\r\n\r\n  check()\r\n  {\r\nalert(this.date);\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Zvcm1zL2ZpbGUtdXBsb2FkL2ZpbGUtdXBsb2FkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\r\\n  <mat-card-title class=\\\"\\\">\\r\\n    <div class=\\\"card-title-text\\\">File upload</div>\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n      <div class=\\\"mb-1\\\">\\r\\n        <p>Multiple</p>\\r\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\r\\n\\r\\n        <p>Single</p>\\r\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"mb-1\\\">\\r\\n        <div ng2FileDrop\\r\\n        [ngClass]=\\\"{'dz-file-over': hasBaseDropZoneOver}\\\"\\r\\n        (fileOver)=\\\"fileOverBase($event)\\\"\\r\\n        [uploader]=\\\"uploader\\\"\\r\\n        class=\\\"fileupload-drop-zone\\\">\\r\\n        Drop file here\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <table class=\\\"default-table mat-box-shadow\\\" style=\\\"width: 100%\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th width=\\\"30%\\\">Name</th>\\r\\n            <th>Size</th>\\r\\n            <th>Progress</th>\\r\\n            <th>Status</th>\\r\\n            <th>Actions</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"uploader.queue.length; else tableNoData\\\">\\r\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n            <td>{{ item?.file?.name }}</td>\\r\\n            <td nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\r\\n            <td>\\r\\n                <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\r\\n                    <mat-progress-bar\\r\\n                      class=\\\"\\\"\\r\\n                      color=\\\"primary\\\"\\r\\n                      mode=\\\"determinate\\\"\\r\\n                      [value]=\\\"item.progress\\\">\\r\\n                    </mat-progress-bar>\\r\\n                </div>\\r\\n            </td>\\r\\n            <td class=\\\"\\\">\\r\\n                <mat-icon *ngIf=\\\"item.isSuccess\\\" color=\\\"primary\\\">check</mat-icon>\\r\\n                <mat-icon *ngIf=\\\"item.isCancel\\\" color=\\\"accent\\\">cancel</mat-icon>\\r\\n                <mat-icon *ngIf=\\\"item.isError\\\" color=\\\"warn\\\">error</mat-icon>\\r\\n            </td>\\r\\n            <td nowrap>\\r\\n                <button \\r\\n                mat-raised-button\\r\\n                class=\\\"mat-primary\\\"\\r\\n                (click)=\\\"item.upload()\\\"\\r\\n                [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">Upload</button>\\r\\n                <button \\r\\n                mat-raised-button\\r\\n                class=\\\"mat-accent\\\"\\r\\n                (click)=\\\"item.cancel()\\\"\\r\\n                [disabled]=\\\"!item.isUploading\\\">Cancel</button>\\r\\n\\r\\n                <button \\r\\n                mat-raised-button\\r\\n                class=\\\"mat-warn\\\"\\r\\n                (click)=\\\"item.remove()\\\">Remove</button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n        <ng-template #tableNoData>\\r\\n          <p [ngStyle]=\\\"{padding: '0 1.2rem'}\\\">Queue is empty</p>\\r\\n        </ng-template>\\r\\n    </table>\\r\\n\\r\\n\\r\\n      <div>\\r\\n        <p>Queue progress:</p>\\r\\n        <div class=\\\"progress mb-1\\\" >\\r\\n            <mat-progress-bar\\r\\n              class=\\\"\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              mode=\\\"determinate\\\"\\r\\n              [value]=\\\"uploader.progress\\\">\\r\\n            </mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n      <button \\r\\n      mat-raised-button\\r\\n      class=\\\"mat-primary\\\"\\r\\n      (click)=\\\"uploader.uploadAll()\\\"\\r\\n      [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">Upload all</button>\\r\\n\\r\\n      <button \\r\\n      mat-raised-button\\r\\n      class=\\\"mat-accent\\\"\\r\\n      (click)=\\\"uploader.cancelAll()\\\"\\r\\n      [disabled]=\\\"!uploader.isUploading\\\">Cancel all</button>\\r\\n\\r\\n      <button \\r\\n      mat-raised-button\\r\\n      class=\\\"mat-warn\\\"\\r\\n      (click)=\\\"uploader.clearQueue()\\\"\\r\\n      [disabled]=\\\"!uploader.queue.length\\\">Remove all</button>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\n\r\n@Component({\r\n  selector: 'app-file-upload',\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.css']\r\n})\r\nexport class FileUploadComponent implements OnInit {\r\n  public uploader: FileUploader = new FileUploader({ url: 'https://evening-anchorage-315.herokuapp.com/api/' });\r\n  public hasBaseDropZoneOver: boolean = false;\r\n  console = console;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { \r\n  MatInputModule,\r\n  MatDatepickerModule, \r\n  MatNativeDateModule,\r\n  MatListModule,\r\n  MatCardModule,\r\n  MatProgressBarModule,\r\n  MatRadioModule,\r\n  MatCheckboxModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatStepperModule\r\n} from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\r\n\r\nimport { BasicFormComponent } from './basic-form/basic-form.component';\r\nimport { RichTextEditorComponent } from './rich-text-editor/rich-text-editor.component';\r\nimport { FileUploadComponent } from './file-upload/file-upload.component';\r\n\r\nimport { FormsRoutes } from \"./forms.routing\";\r\nimport { WizardComponent } from './wizard/wizard.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatDatepickerModule, \r\n    MatNativeDateModule,\r\n    MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatStepperModule,\r\n    FlexLayoutModule,\r\n    QuillModule,\r\n    NgxDatatableModule,\r\n    FileUploadModule,\r\n    RouterModule.forChild(FormsRoutes)\r\n  ],\r\n  declarations: [BasicFormComponent, RichTextEditorComponent, FileUploadComponent, WizardComponent]\r\n})\r\nexport class AppFormsModule { }","import { Routes } from '@angular/router';\r\n\r\nimport { BasicFormComponent } from './basic-form/basic-form.component';\r\nimport { RichTextEditorComponent } from './rich-text-editor/rich-text-editor.component';\r\nimport { FileUploadComponent } from './file-upload/file-upload.component';\r\nimport { WizardComponent } from './wizard/wizard.component';\r\n\r\nexport const FormsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [{\r\n      path: 'basic',\r\n      component: BasicFormComponent,\r\n      data: { title: 'Basic', breadcrumb: 'BASIC' }\r\n    }, {\r\n      path: 'editor',\r\n      component: RichTextEditorComponent,\r\n      data: { title: 'Editor', breadcrumb: 'EDITOR' }\r\n    }, {\r\n      path: 'upload',\r\n      component: FileUploadComponent,\r\n      data: { title: 'Upload', breadcrumb: 'UPLOAD' }\r\n    }, {\r\n      path: 'wizard',\r\n      component: WizardComponent,\r\n      data: { title: 'Wizard', breadcrumb: 'WIZARD' }\r\n    }]\r\n  }\r\n];","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Zvcm1zL3JpY2gtdGV4dC1lZGl0b3IvcmljaC10ZXh0LWVkaXRvci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\r\\n  \\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n    <quill-editor \\r\\n    theme=\\\"snow\\\" \\r\\n    [(ngModel)]=\\\"editorData\\\" \\r\\n    (onContentChanged)=\\\"onContentChanged()\\\" \\r\\n    onSelectionChanged=\\\"onSelectionChanged()\\\"></quill-editor>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rich-text-editor',\r\n  templateUrl: './rich-text-editor.component.html',\r\n  styleUrls: [\r\n    './rich-text-editor.component.css'\r\n  ]\r\n})\r\nexport class RichTextEditorComponent implements OnInit {\r\n\r\n  editorData = `<h1>Egret | Angular material admin</h1>\r\n  <p><a href=\"http://devegret.com\" target=\"_blank\"><strong>DevEgret</strong></a></p>\r\n  <p><br></p><p><strong >Lorem Ipsum</strong>\r\n  <span>&nbsp;is simply dummy text of the printing and typesetting industry. \r\n  Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a \r\n  galley of type and scrambled it to make a type specimen book. It has survived not only five centuries</span></p>`;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onContentChanged() { }\r\n  onSelectionChanged() { }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Zvcm1zL3dpemFyZC93aXphcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\r\\n  <mat-card-title class=\\\"\\\">\\r\\n    <div class=\\\"card-title-text\\\">Horizontal</div>\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-horizontal-stepper [linear]=\\\"true\\\">\\r\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n          <ng-template matStepLabel>Fill out your name</ng-template>\\r\\n          <mat-form-field class=\\\"pt-1 pb-1\\\">\\r\\n            <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n          </mat-form-field>\\r\\n          <div>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n          <ng-template matStepLabel>Fill out your address</ng-template>\\r\\n          <mat-form-field class=\\\"pt-1 pb-1\\\">\\r\\n            <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n          </mat-form-field>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\r\\n            <span fxFlex=\\\"8px\\\"></span>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n      <mat-step>\\r\\n        <ng-template matStepLabel>Done</ng-template>\\r\\n        <div>\\r\\n          <mat-icon class=\\\"pt-1\\\" [style.fontSize]=\\\"'36px'\\\">check</mat-icon>\\r\\n        </div>\\r\\n        <div class=\\\"pb-1 mb-1\\\"> You Are Done.</div>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\r\\n          <span fxFlex=\\\"8px\\\"></span>\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Submit</button>\\r\\n        </div>\\r\\n      </mat-step>\\r\\n    </mat-horizontal-stepper>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card class=\\\"p-0\\\">\\r\\n  <mat-card-title class=\\\"\\\">\\r\\n    <div class=\\\"card-title-text\\\">Verticle</div>\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-vertical-stepper [linear]=\\\"true\\\">\\r\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n          <ng-template matStepLabel>Fill out your name</ng-template>\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n          </mat-form-field>\\r\\n          <div>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n          <ng-template matStepLabel>Fill out your address</ng-template>\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n          </mat-form-field>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\r\\n            <span fxFlex=\\\"8px\\\"></span>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n      <mat-step>\\r\\n        <ng-template matStepLabel>Done</ng-template>\\r\\n        <div>\\r\\n          <mat-icon class=\\\"pt-1\\\" [style.fontSize]=\\\"'36px'\\\">check</mat-icon>\\r\\n        </div>\\r\\n        <div class=\\\"pb-1 mb-1\\\"> You Are Done.</div>\\r\\n        <div>\\r\\n          <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\r\\n        </div>\\r\\n      </mat-step>\\r\\n    </mat-vertical-stepper>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-wizard',\r\n  templateUrl: './wizard.component.html',\r\n  styleUrls: ['./wizard.component.css']\r\n})\r\nexport class WizardComponent implements OnInit {\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this.fb.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this.fb.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n  \r\n  submit() {\r\n    console.log(this.firstFormGroup.value);\r\n    console.log(this.secondFormGroup.value);\r\n  }\r\n}\r\n"],"sourceRoot":""}